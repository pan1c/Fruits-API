version: "3.9"

# Here is the Docker Compose file that developers can you for local development and testing.

name: fruitapi  # project name for cleaner container/image names

services:
  api:
    image: fruitapi:latest              # custom image name
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: >
      uvicorn app.main:app --host 0.0.0.0 --port 8000

  db:
    image: postgres:16-alpine
    container_name: fruit-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # volumes:
    #   - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1s
      timeout: 1s
      retries: 5
    ports:
      - "5432:5432"

  test:
    profiles: ["test"]                 # run with `docker-compose --profile test up`
    image: fruitapi:test
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    env_file: .env
    depends_on:
      api:
        condition: service_started
    environment:
      TEST_DATABASE_URL: postgresql+asyncpg://fruituser:fruitpass@db:5432/fruitdb
    command: pytest -v -s tests/test_api.py

# volumes:
#   db-data:
